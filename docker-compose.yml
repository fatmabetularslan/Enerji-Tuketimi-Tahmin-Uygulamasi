services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: your_password
      POSTGRES_DB: your_db
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: airflow_webserver
    container_name: airflow_webserver
    environment:
      - AIRFLOW__CORE__FERNET_KEY=your_fernet_key
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://your_postgres:your_postgres@postgres:5432/your_db
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    command: "webserver"
    ports:
      - "8083:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    depends_on:
      - postgres
    restart: always

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: airflow_scheduler
    container_name: airflow_scheduler
    environment:
      - AIRFLOW__CORE__FERNET_KEY=your_fernet_key
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://your_user:your_db@your_postgres:5432/your_db
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    command: "scheduler"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    depends_on:
      - postgres
    restart: always

  airflow-init:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    image: airflow_init
    container_name: airflow_init
    environment:
      - LOAD_EXAMPLES=False
      - AIRFLOW__CORE__FERNET_KEY=your_fernet_key
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://your_user:your_db@your_postgres:5432/your_db
    entrypoint: ["bash", "-c", "airflow db init && airflow users create -u your_db -p your_user -r your_password -e admin@example.com -f admin -l user"]
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
    depends_on:
      - postgres
    restart: on-failure

  fastapi:
    build:
      context: ./fastapi
      dockerfile: Dockerfile
    image: fastapi_app
    container_name: fastapi_app
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: airflow
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_PORT: 5432
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - ./data:/app/data  # Model ve scaler dosyalarÄ± burada volume olarak gelecek

volumes:
  postgres-data:
